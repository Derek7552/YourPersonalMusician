{"mappings":"kBAAMA,yDCAKC,EAAQC,WAGa,IAAZC,QAA6C,IAAXC,EAClDF,EAAQC,EAASC,YAEbC,EAAAA,CACFF,QAAAA,IAEFD,EAAQG,EAAIF,QAASE,GACrBJ,EAAOK,WAAaD,EAAIF,UAEzBI,MAAM,SAAUJ,EAASC,OAGtBI,EACO,IADPA,EAEa,WAIjB,SAAAC,UACS,SAAWC,KAAKC,MAAQ,IAAMC,KAAKC,KAAqB,IAAhBD,KAAKE,UAGtD,SAAAC,EAAuBC,cAIZC,OAAOD,SACPE,GACPD,OAAOD,QAAgBG,GAI3B,SAAAC,EAAsBC,OAChBC,EAASC,SAASC,eAAeH,GACjCC,GACFC,SAASE,qBAAqB,QAAQ,GAAGC,YAAYJ,GAmFzDlB,EAAOD,QA/EP,SAAoBwB,OACdC,EAAUC,UAAUC,QAAU,QAAsBX,IAAjBU,UAAU,GAAOV,GAAiBU,UAAU,GAG/EE,EAAMJ,EACNK,EAAUJ,EAAQI,SAAWxB,EAC7ByB,EAAgBL,EAAQK,eAAiBzB,EAEzC0B,OAAYf,aAELgB,SAAQ,SAAUC,EAASC,OAChCC,EAAmBV,EAAQW,uBAAyB9B,IACpDY,EAAWY,EAAgB,IAAMK,EAErCrB,OAAOqB,GAAoB,SAAUE,GACnCJ,EAAAA,CACEK,IAAI,EAEJC,KAAM,kBACGP,QAAQC,QAAQI,MAIvBN,GAAWS,aAAaT,GAE5Bd,EAAaC,GAEbN,EAAcuB,IAIhBP,IAA6B,IAAtBA,EAAIa,QAAQ,KAAc,IAAM,QAEnCC,EAActB,SAASuB,cAAc,UACzCD,EAAYE,aAAa,MAAO,GAAKhB,EAAME,EAAgB,IAAMK,GAC7DV,EAAQoB,SACVH,EAAYE,aAAa,UAAWnB,EAAQoB,SAE9CH,EAAYI,GAAK5B,EACjBE,SAASE,qBAAqB,QAAQ,GAAGyB,YAAYL,GAErDX,EAAYiB,YAAW,WACrBd,EAAAA,IAAWe,MAAM,oBAAsBzB,EAAO,eAE9CZ,EAAcuB,GACdlB,EAAaC,GACbJ,OAAOqB,GAAoB,WACzBvB,EAAcuB,MAEfN,GAGHa,EAAYQ,QAAU,WACpBhB,EAAAA,IAAWe,MAAM,oBAAsBzB,EAAO,YAE9CZ,EAAcuB,GACdlB,EAAaC,GACTa,GAAWS,aAAaT,+BDhGjBX,SAAS+B,cAAc,gBAG/BC,iBAAiB,UAG5B,SAAoBrC,GAChBA,EAAEsC,uBAEIC,EAAalC,SAAS+B,cAAc,gBAAgBI,MAI1D1D,EAFM2D,wCAAmDF,KAGpDG,MAAKC,GAAOA,EAAInB,SAEhBkB,MAAKE,GAKd,SAAmBC,GACfC,QAAQC,IAAIF,SAENG,EAAU3C,SAAS+B,cAAc,YAGvCY,EAAQC,UAAY,WAGXC,EAAI,EAAGA,EAAIL,EAAOjC,OAAQsC,IAAAA,OACzBC,EAAQN,EAAOK,MAEF,SAAfC,EAAMC,oBAIJC,EAAMhD,SAASuB,cAAc,OACnCyB,EAAIC,UAAUC,IAAI,QAClBF,EAAIJ,UAAAA,+CACgCE,EAAMK,iHAETL,EAAMM,wDACRN,EAAMO,yIAGCP,EAAMQ,oEACNR,EAAMS,sBAAsBT,EAAMU,qIAG/CV,EAAMW,mJAIbX,EAAMY,uFAGxBf,EAAQhB,YAAYqB,IAzCNW,CAAUpB,EAAKI,WAC5BiB,OAAMC,GAAOpB,QAAQC,IAAImB","sources":["./src/main.js","./node_modules/fetch-jsonp/build/fetch-jsonp.js"],"sourcesContent":["const fetchJsonp = require('fetch-jsonp');\n\n// Get searchform element\nconst searchForm = document.querySelector('#search-form');\n\n// Submit search form\nsearchForm.addEventListener('submit', fetchMusic);\n\n// Fetch music data from Apple music API\nfunction fetchMusic(e) {\n    e.preventDefault();\n    // console.log(\"worked\");\n    const searchText = document.querySelector('#search-text').value;\n\n    const fetchUrl = `https://itunes.apple.com/search?term=${searchText}`;\n\n    fetchJsonp(fetchUrl)\n        .then(res => res.json())\n        // .then(data=>console.log(data))\n        .then(data => showMusic(data.results))\n        .catch(err => console.log(err));\n}\n\n// Show each music in card\nfunction showMusic(musics) {\n    console.log(musics);\n\n    const results = document.querySelector('#results');\n\n    // Clear first\n    results.innerHTML = '';\n\n    // Loop through musics\n    for (let i = 0; i < musics.length; i++) {\n        const music = musics[i];\n\n        if (music.kind !== 'song') {\n            continue;\n        }\n\n        const div = document.createElement('div');\n        div.classList.add('card');\n        div.innerHTML = `\n            <img class=\"card-img-top\" src=${music.artworkUrl100} alt=\"Album image\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">${music.trackName}</h5>\n                <p class=\"card-text\">${music.artistName}</p>\n            </div>\n            <ul class=\"list-group list-group-flush\">\n                <li class=\"list-group-item\">${music.collectionName}</li>\n                <li class=\"list-group-item\">${music.primaryGenreName} ~ ${music.releaseData} </li>\n                <li class=\"list-group-item\">\n                    Sample: <br>\n                    <audio src=${music.previewUrl} controls='controls'></audio>\n                </li>\n            </ul>\n            <div class=\"card-body\">\n                <a href=${music.trackViewUrl} class=\"card-link\">Show in Apple Music</a>\n            </div>\n        `;\n        results.appendChild(div);\n    }\n}","(function (global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['exports', 'module'], factory);\n  } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {\n    factory(exports, module);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, mod);\n    global.fetchJsonp = mod.exports;\n  }\n})(this, function (exports, module) {\n  'use strict';\n\n  var defaultOptions = {\n    timeout: 5000,\n    jsonpCallback: 'callback',\n    jsonpCallbackFunction: null\n  };\n\n  function generateCallbackFunction() {\n    return 'jsonp_' + Date.now() + '_' + Math.ceil(Math.random() * 100000);\n  }\n\n  function clearFunction(functionName) {\n    // IE8 throws an exception when you try to delete a property on window\n    // http://stackoverflow.com/a/1824228/751089\n    try {\n      delete window[functionName];\n    } catch (e) {\n      window[functionName] = undefined;\n    }\n  }\n\n  function removeScript(scriptId) {\n    var script = document.getElementById(scriptId);\n    if (script) {\n      document.getElementsByTagName('head')[0].removeChild(script);\n    }\n  }\n\n  function fetchJsonp(_url) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    // to avoid param reassign\n    var url = _url;\n    var timeout = options.timeout || defaultOptions.timeout;\n    var jsonpCallback = options.jsonpCallback || defaultOptions.jsonpCallback;\n\n    var timeoutId = undefined;\n\n    return new Promise(function (resolve, reject) {\n      var callbackFunction = options.jsonpCallbackFunction || generateCallbackFunction();\n      var scriptId = jsonpCallback + '_' + callbackFunction;\n\n      window[callbackFunction] = function (response) {\n        resolve({\n          ok: true,\n          // keep consistent with fetch API\n          json: function json() {\n            return Promise.resolve(response);\n          }\n        });\n\n        if (timeoutId) clearTimeout(timeoutId);\n\n        removeScript(scriptId);\n\n        clearFunction(callbackFunction);\n      };\n\n      // Check if the user set their own params, and if not add a ? to start a list of params\n      url += url.indexOf('?') === -1 ? '?' : '&';\n\n      var jsonpScript = document.createElement('script');\n      jsonpScript.setAttribute('src', '' + url + jsonpCallback + '=' + callbackFunction);\n      if (options.charset) {\n        jsonpScript.setAttribute('charset', options.charset);\n      }\n      jsonpScript.id = scriptId;\n      document.getElementsByTagName('head')[0].appendChild(jsonpScript);\n\n      timeoutId = setTimeout(function () {\n        reject(new Error('JSONP request to ' + _url + ' timed out'));\n\n        clearFunction(callbackFunction);\n        removeScript(scriptId);\n        window[callbackFunction] = function () {\n          clearFunction(callbackFunction);\n        };\n      }, timeout);\n\n      // Caught if got 404/500\n      jsonpScript.onerror = function () {\n        reject(new Error('JSONP request to ' + _url + ' failed'));\n\n        clearFunction(callbackFunction);\n        removeScript(scriptId);\n        if (timeoutId) clearTimeout(timeoutId);\n      };\n    });\n  }\n\n  // export as global function\n  /*\n  let local;\n  if (typeof global !== 'undefined') {\n    local = global;\n  } else if (typeof self !== 'undefined') {\n    local = self;\n  } else {\n    try {\n      local = Function('return this')();\n    } catch (e) {\n      throw new Error('polyfill failed because global object is unavailable in this environment');\n    }\n  }\n  local.fetchJsonp = fetchJsonp;\n  */\n\n  module.exports = fetchJsonp;\n});"],"names":["$16b5ad875ae907e2f7f79e7b8fe116cc$var$fetchJsonp","global","factory","exports","module","mod","fetchJsonp","this","defaultOptions","generateCallbackFunction","Date","now","Math","ceil","random","clearFunction","functionName","window","e","undefined","removeScript","scriptId","script","document","getElementById","getElementsByTagName","removeChild","_url","options","arguments","length","url","timeout","jsonpCallback","timeoutId","Promise","resolve","reject","callbackFunction","jsonpCallbackFunction","response","ok","json","clearTimeout","indexOf","jsonpScript","createElement","setAttribute","charset","id","appendChild","setTimeout","Error","onerror","querySelector","addEventListener","preventDefault","searchText","value","fetchUrl","then","res","data","musics","console","log","results","innerHTML","i","music","kind","div","classList","add","artworkUrl100","trackName","artistName","collectionName","primaryGenreName","releaseData","previewUrl","trackViewUrl","$16b5ad875ae907e2f7f79e7b8fe116cc$var$showMusic","catch","err"],"version":3,"file":"index.e0ea83b1.js.map"}